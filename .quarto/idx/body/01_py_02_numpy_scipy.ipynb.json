{"title":"NumPy","markdown":{"yaml":{"title":"NumPy"},"headingText":"向量、矩阵及其运算","containsRefs":false,"markdown":"\n\n\n\n\n数值计算是科学研究领域使用最多的编程功能。虽然Python自带了一些基本的数学函数以及列表、元组等数据结构，然而并没有对向量运算的天然支持，因而我们需要NumPy这个包来支持Python中的向量运算。\n\nNumPy提供了丰富的数值计算方法，由于篇幅所限，我们无法介绍所有的NumPy特性，更多的参考可以从NumPy（包括SciPy）的网站： https://docs.scipy.org/doc/ 找到更加详细的参考。\n\n\nNumPy最核心的是提供了向量和矩阵两个数据结构，可以方便的使用这些数据结构进行向量的加、减、数乘，以及矩阵的加、减、数乘、乘法、求逆、矩阵分解等运算。\n\n在Python中，如果需要使用NumPy，首先要使用pip安装numpy，接着在文件中导入numpy。numpy.array()函数提供了将一个列表转化为一个向量的方法，比如：\n\n\n\n此外，还有一些其他的方法创建向量，比如：\n\n还有一个更加常用的函数:linespace(n1,n2,N)，该函数创建从n1到n2区间平均分为N等份的网格点：\n\nNumPy支持很多向量运算，比如：\n\n这里要特别特别注意的是，向量的乘法\\*和除法定义的是元素对元素的乘除法，这点与MATLAB等有很大不同。\n\n除了可以使用numpy.array()创建向量，也可以创建矩阵，创建矩阵时，提供一个列表的列表，每个列表代表矩阵中的一行：\n\n以及一些特殊矩阵：\n\n以及一些矩阵的运算：\n\n同样，**乘法\\*和除法定义的是元素对元素的乘除法，切记！**\n\n如果需要提取出矩阵的元素，可以使用 **A\\[row,col\\]（而非A\\[row\\]\\[col\\]！！）**。\n\n此外，数组和矩阵都支持切片操作。比如，如果希望提取出矩阵A的奇数行、奇数列，可以用：\n\n另外，这里与Python中的另外一个不同是，在Python的列表中，实行切片操作是直接对切片出的元素进行复制，而在NumPy中，切片操作只是一个视图（view），并没有进行复制。理解这一点是非常关键的，比如：\n\n因而，在对数组、矩阵进行切片、修改时，需要特别注意。\n\n如果需要创建切片的副本，需要用copy()方法：\n\n可以发现原始向量并没有被改变。\n\n## 向量、矩阵的变形、合并和分裂\n\n对于向量、矩阵的另外一个更常用的操作是变形，比如，我们可能将一个向量变形为一个矩阵，可以按照如下的方法：\n\n实际上，我们可以通过向量或者矩阵的ndim属性查看其维度：\n\n可见，vec_b作为列向量，在NumPy中实际上看成时一个矩阵。如果要看其维数，需要用shape属性：\n\n也可以只用size属性查看其大小：\n\n此外，有时我们还需要拼接两个矩阵，此时需要使用np.concatenate、np.vstack、np.hstack三个方法。\n\nnp.concatenate方法用于拼接向量，比如：\n\nnp.vstack用于竖直拼接矩阵，hstack用于水平拼接举着，比如：\n\n## 随机数生成\n\n科学计算中很多算法都依赖于随机数的生成，比如数值积分计算的Monte Carlo法、MCMC等方法。在Python中，自带了numpy.random包，可以用来生成随机数。\n\n为了使用numpy.random，必须先导入：\n```python\nimport numpy.random as nprd\n```\n\n接下来，就可以直接使用了。比如，\n\n* `nprd.random(n)` 产生一个 n 维向量，每个分量都服从均匀分布的随机数；\n* `nprd.randn(n)` 产生一个 n 维向量，每个分量都服从正态分布的随机数；\n* `nprd.choice(a)` 从向量 a 中随机抽取一个元素\n\n......\n\n具体随机数列表可以查看 [numpy - random number](https://docs.scipy.org/doc/numpy-1.16.1/reference/routines.random.html)。\n\n## 向量函数\n\n在此之前，我们曾经介绍过使用 Python 中自带的 `math.exp()`、`math.sin()`、`math.cos()` 等函数。现在想象以下，为了计算一个向量每个分量的指数函数，我们不得不写一个循环：\n\n然而，Python 的循环非常的缓慢，如果数据量巨大，以上做法非常耗时。幸运的是，**NumPy** 为我们提供了非常强大的函数功能，比如：\n\n函数列表可以从 [Universal functions (ufunc)](https://docs.scipy.org/doc/numpy-1.16.1/reference/ufuncs.html) 中找到。\n\n此外，NumPy 还提供了方便的数据加总函数，比如求和、平均数、最大值、最小值、中位数等。\n\n比如，以下代码中，我们随机产生了一组正态分布的数据，并计算了其和和、平均数、最大值、最小值、中位数、四分位数：\n\n不过，以上代码可能会有问题，如果向量中存在缺失值（比如NaN），以上函数也会计算出NaN。为了避免这一个问题，可以使用以上程序的安全版本：\n\n此外还有两个特殊的函数：numpy.any()函数用于判断一个逻辑向量（其值为True/False）是否有True；而numpy.all()用于判断逻辑向量是否全为真，比如：\n\n## SciPy 简介\n\n`SciPy` 在 `NumPy` 的基础扩展了一些用于数值计算的高级工具，比如：\n\n* `scipy.special`：特殊函数，包括gamma函数、beta函数、各种统计函数、erf函数等等，都可以从这里找到\n* `scipy.optimize`：提供了最优化方法\n* `scipy.sparse`：稀疏矩阵\n* `scipy.interpolate`：插值\n* `scipy.integrate`：积分和常微分方程\n* `scipy.fftpack`：快速傅里叶变换\n* `scipy.stats`：常用的统计函数\n\n......\n\n在此我们不再赘述，如有需要，可以参考 [SciPy User Guide](https://docs.scipy.org/doc/scipy/tutorial/index.html)。我们也会在接下来通过实例的方式稍微介绍SciPy的用法。\n","srcMarkdownNoYaml":"\n\n\n\n\n数值计算是科学研究领域使用最多的编程功能。虽然Python自带了一些基本的数学函数以及列表、元组等数据结构，然而并没有对向量运算的天然支持，因而我们需要NumPy这个包来支持Python中的向量运算。\n\nNumPy提供了丰富的数值计算方法，由于篇幅所限，我们无法介绍所有的NumPy特性，更多的参考可以从NumPy（包括SciPy）的网站： https://docs.scipy.org/doc/ 找到更加详细的参考。\n\n## 向量、矩阵及其运算\n\nNumPy最核心的是提供了向量和矩阵两个数据结构，可以方便的使用这些数据结构进行向量的加、减、数乘，以及矩阵的加、减、数乘、乘法、求逆、矩阵分解等运算。\n\n在Python中，如果需要使用NumPy，首先要使用pip安装numpy，接着在文件中导入numpy。numpy.array()函数提供了将一个列表转化为一个向量的方法，比如：\n\n\n\n此外，还有一些其他的方法创建向量，比如：\n\n还有一个更加常用的函数:linespace(n1,n2,N)，该函数创建从n1到n2区间平均分为N等份的网格点：\n\nNumPy支持很多向量运算，比如：\n\n这里要特别特别注意的是，向量的乘法\\*和除法定义的是元素对元素的乘除法，这点与MATLAB等有很大不同。\n\n除了可以使用numpy.array()创建向量，也可以创建矩阵，创建矩阵时，提供一个列表的列表，每个列表代表矩阵中的一行：\n\n以及一些特殊矩阵：\n\n以及一些矩阵的运算：\n\n同样，**乘法\\*和除法定义的是元素对元素的乘除法，切记！**\n\n如果需要提取出矩阵的元素，可以使用 **A\\[row,col\\]（而非A\\[row\\]\\[col\\]！！）**。\n\n此外，数组和矩阵都支持切片操作。比如，如果希望提取出矩阵A的奇数行、奇数列，可以用：\n\n另外，这里与Python中的另外一个不同是，在Python的列表中，实行切片操作是直接对切片出的元素进行复制，而在NumPy中，切片操作只是一个视图（view），并没有进行复制。理解这一点是非常关键的，比如：\n\n因而，在对数组、矩阵进行切片、修改时，需要特别注意。\n\n如果需要创建切片的副本，需要用copy()方法：\n\n可以发现原始向量并没有被改变。\n\n## 向量、矩阵的变形、合并和分裂\n\n对于向量、矩阵的另外一个更常用的操作是变形，比如，我们可能将一个向量变形为一个矩阵，可以按照如下的方法：\n\n实际上，我们可以通过向量或者矩阵的ndim属性查看其维度：\n\n可见，vec_b作为列向量，在NumPy中实际上看成时一个矩阵。如果要看其维数，需要用shape属性：\n\n也可以只用size属性查看其大小：\n\n此外，有时我们还需要拼接两个矩阵，此时需要使用np.concatenate、np.vstack、np.hstack三个方法。\n\nnp.concatenate方法用于拼接向量，比如：\n\nnp.vstack用于竖直拼接矩阵，hstack用于水平拼接举着，比如：\n\n## 随机数生成\n\n科学计算中很多算法都依赖于随机数的生成，比如数值积分计算的Monte Carlo法、MCMC等方法。在Python中，自带了numpy.random包，可以用来生成随机数。\n\n为了使用numpy.random，必须先导入：\n```python\nimport numpy.random as nprd\n```\n\n接下来，就可以直接使用了。比如，\n\n* `nprd.random(n)` 产生一个 n 维向量，每个分量都服从均匀分布的随机数；\n* `nprd.randn(n)` 产生一个 n 维向量，每个分量都服从正态分布的随机数；\n* `nprd.choice(a)` 从向量 a 中随机抽取一个元素\n\n......\n\n具体随机数列表可以查看 [numpy - random number](https://docs.scipy.org/doc/numpy-1.16.1/reference/routines.random.html)。\n\n## 向量函数\n\n在此之前，我们曾经介绍过使用 Python 中自带的 `math.exp()`、`math.sin()`、`math.cos()` 等函数。现在想象以下，为了计算一个向量每个分量的指数函数，我们不得不写一个循环：\n\n然而，Python 的循环非常的缓慢，如果数据量巨大，以上做法非常耗时。幸运的是，**NumPy** 为我们提供了非常强大的函数功能，比如：\n\n函数列表可以从 [Universal functions (ufunc)](https://docs.scipy.org/doc/numpy-1.16.1/reference/ufuncs.html) 中找到。\n\n此外，NumPy 还提供了方便的数据加总函数，比如求和、平均数、最大值、最小值、中位数等。\n\n比如，以下代码中，我们随机产生了一组正态分布的数据，并计算了其和和、平均数、最大值、最小值、中位数、四分位数：\n\n不过，以上代码可能会有问题，如果向量中存在缺失值（比如NaN），以上函数也会计算出NaN。为了避免这一个问题，可以使用以上程序的安全版本：\n\n此外还有两个特殊的函数：numpy.any()函数用于判断一个逻辑向量（其值为True/False）是否有True；而numpy.all()用于判断逻辑向量是否全为真，比如：\n\n## SciPy 简介\n\n`SciPy` 在 `NumPy` 的基础扩展了一些用于数值计算的高级工具，比如：\n\n* `scipy.special`：特殊函数，包括gamma函数、beta函数、各种统计函数、erf函数等等，都可以从这里找到\n* `scipy.optimize`：提供了最优化方法\n* `scipy.sparse`：稀疏矩阵\n* `scipy.interpolate`：插值\n* `scipy.integrate`：积分和常微分方程\n* `scipy.fftpack`：快速傅里叶变换\n* `scipy.stats`：常用的统计函数\n\n......\n\n在此我们不再赘述，如有需要，可以参考 [SciPy User Guide](https://docs.scipy.org/doc/scipy/tutorial/index.html)。我们也会在接下来通过实例的方式稍微介绍SciPy的用法。\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"wrap","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"number-sections":true,"highlight-style":"atom-one","css":["../styles.css"],"output-file":"01_py_02_numpy_scipy.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.39","editor":"visual","theme":"cosmo","linestretch":1.6,"fontsize":"11.5pt","highlight":true,"callout-appearance":"default","md-extensions":["callout"],"includes":{"after-body":"../_includes/counter.html"},"title":"NumPy"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}