{"title":"Python：安装和环境配置","markdown":{"yaml":{"title":"Python：安装和环境配置"},"headingText":"重要说明","containsRefs":false,"markdown":"\n\n\n\n\n::: {.callout-important}\n\n！**只需安装**：Anaconda + VScode。\n\n- 直接使用 Anaconda 中的 Python 环境即可。\n- 不要单独安装 Python 3.12 / 3.13。\n:::\n\n\n\n\n对于初学者来讲，建议安装 Anaconda 套装。它是一个开源的 Python 发行版，集成了 Python 解释器、包管理器 Conda 和许多常用的科学计算和数据分析库（如 NumPy、Pandas、Matplotlib 等）。\n\n虽然 Anaconda 自带的编辑器 Jupyter Notebook 很好用，但如果你平时经常用 VScode 写东西，建议安装 [VScode](https://www.lianxh.cn/details/1174.html) 作为编辑器。VScode 支持多种编程语言，可以安装各种插件来增强功能。对于编写 Python 代码而言，仅需安装 `python` 和 `jupyter` 插件就可以满足基本需求。\n\n网上有不少关于 Anaconda 和 VScode 的安装和配置的教程，如：\n\n-   [Python 运行环境之 VSCode 与 Anaconda 安装配置](https://blog.csdn.net/weixin_43679228/article/details/147256251)\n-   [Anaconda + VS Code 的安装与使用](https://blog.csdn.net/m0_51976564/article/details/136141325)\n\n根据我的使用经验，基本步骤总结如下：\n\n1. **安装 Anaconda** 软件 (3.1 小节)。注意勾选 `Add Anaconda to my PATH environment variable` 和 `Register Anaconda as my default Python 3.x` 选项。\n2. **安装 VScode**  软件 (3.2 小节)。\n   - 打开 **VScode** 软件，安装 VScode 插件：`Python`, `Jupyter`, `Pylance`, `gitHub Copilot` (或 `codeium`, 现在更名为 `windsurf Plugin`) 等。\n3. **新建项目文件夹** (可选)。打开 VScode，新建一个文件夹，其下新建 **data**, **code**, **output** 等子文件夹，便于分类存放文档。\n4. **新建 Jupyter Notebook 文件**。在主文件夹下新建 `xxx.ipynb` 文件，就可以开始编写代码了。\n\n下面，我详细说明每个步骤的操作。\n\n\n\n## 安装 Anaconda\n\n::: {.callout-warning}\n### 提示\n\n- 请务必认真阅读安装步骤，不要跳过任何步骤，尤其是安装路径的选择和环境变量的配置。否则后续出错后，需要大量时间排查问题。\n- 安装过程中，可以借助 DeepSeek，ChatGPT, 豆包等 AI 助手来解决问题。\n  \n:::\n\n\n1.  [下载 Anaconda](https://www.anaconda.com/products/distribution#download-section)（建议注册一个账号，若不注册，可以点击 **Skip**）。\n\n2.  安装 Anaconda。**安装 Anaconda 最重要的事情：**\n\n    -   **Select Installation Type** 页面，建议选择 **Just Me**，然后点击 **Next**。\n\n    -   **Choose Install Location** 页面，建议使用默认路径 `C:\\Users\\用户名\\Anaconda3` 作为 Anaconda 的安装路径，这样可以避免一些潜在的权限和路径问题。**然而，** 如果你的用户名中包含中文字符或空格，建议选择「自定义路径」，并选择一个英文路径，如 `C:\\myProgram\\Anaconda3`。\n\n    -   **Advanced Installation Options** 页面，确保**同时勾选**如下两个选项：\n\n        -   [√] `Add Anaconda to my PATH environment variable`\n        -   [√] `Register Anaconda as my default Python 3.x`\n\n        ![](https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/20250513210628.png)\n\n    -   详情参见：[VSCode 与 Anaconda安装配置](https://blog.csdn.net/weixin_43679228/article/details/147256251)\n\n3.  安装完成后，打开 Anaconda Prompt（命令行界面），输入以下命令检查安装是否成功：\n\n    ``` bash\n    conda --version\n    ```\n    \n    如果显示版本号，则表示安装成功。\n\n::: {.callout-note}\n### 可选步骤\n\n1.  安装完成后，打开 Anaconda Navigator (在开始菜单或应用程序中找到它)。在 Anaconda Prompt 中输入以下命令更新 Conda 到最新版本：\n\n    ``` bash\n    conda update conda\n    ```\n\n2.  创建一个新的虚拟环境（**可选**）：如果你想在一个独立的环境中工作，比如，你要同时使用 Python 3.8 和 Python 3.12，以便完成不同的项目，你可以创建一个新的虚拟环境。输入以下命令创建一个名为 `myenv38` 的虚拟环境，并安装 Python 3.8：\n\n    ``` bash\n    conda create --name myenv38 python=3.8\n    ```\n\n    同理，如果你想使用 Python 3.12，你可以创建一个名为 `myenv312` 的虚拟环境，并安装 Python 3.12：\n\n    ``` bash\n    conda create --name myenv312 python=3.12\n    ```\n\n    接下来，你可以激活特定的虚拟环境，比如 **myenv38**，输入以下命令：\n\n    ``` bash\n    conda activate myenv38\n    ```\n\n    此时，若执行 `canda list` 命令，你会看到当前环境中安装的所有包和版本信息；而执行 `canda install Stargazer, v = 2.1.1`，则会在当前环境中安装 `Stargazer` 包的 2.1.1 版本。\n\n:::\n\n## 安装 VScode 及插件\n\n::: {.callout-note}\n### VScode 及插件的安装和使用\n\n  - 王胜文, 2023, [VScode编辑器：安装、使用与常用快捷键](https://www.lianxh.cn/details/1174.html)\n  - 初虹, 2022, [Markdown-LaTeX：经管人的VSCode配置大全](https://www.lianxh.cn/details/1004.html).\n  - 连玉君, 2024, [VScode 插件：安装、配置和使用](https://www.lianxh.cn/details/1490.html).\n  - 连玉君, 2024, [VScode：实用 Markdown 插件推荐](https://www.lianxh.cn/details/1390.html).\n  - 连玉君, 2024, [从基础到 AI 助手：Python 用户最爱的 VScode 插件清单](https://www.lianxh.cn/details/1489.html)\n\n:::\n\nVisual Studio Code (VS Code) 是微软推出的轻量但功能强大的源代码编辑器，基于 Electron 开发，支持 Windows、Linux 和 macOS 操作系统。VScode 免费开源且功能强大，VScode 写代码支持各种流行的编程语言，包括 C++、Java 等，使用熟练之后，基本不会再使用其他的编辑器。最重要的是，VScode 平台上有大量的插件，极大地扩展了其功能。\n\n1.  [下载 VScode](https://code.visualstudio.com/Download) (请酌情选择适合你操作系统的版本)。\n2.  安装 VScode（双击下载的安装包，按照提示完成安装）。\n3.  安装完成后，打开 VScode。\n4.  在 VScode 中，安装插件以扩展 VScode 的性能，比如 Python、Jupyter 等。\n\n### VScode 插件\n\n**插件安装方法**：点击图中的 `四个小方块` 图标，在搜索框中填入插件名称，点击 `Install` 即可。\n\n详情参见 [VScode 插件：安装、配置和使用](https://www.lianxh.cn/details/1490.html)\n\n![](https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/20250516181811.png){width=700}  \n\n为了能在 VScode 中借助 Jupyter Notebook 中同时运行 Python 和 Stata 代码，我们需要安装 `python`, `Jupyter`, `nbstata`, `Copilot` 等插件，具体说明如下。\n\n\n#### Python 和 Jupyter 插件\n\n为了能够在 VScode 中使用 Jupyter Notebook 运行 Python 代码，并借助 AI 提升工作效率，你需要安装以下插件：\n\n- **Python** (必装，作者：Microsoft)：运行 Python 代码\n- **Jupyter** (必装，作者：Microsoft)：用于编辑和运行 Jupyter Notebook 文件\n- **Pylance** (推荐，作者：Microsoft)：代码补全和智能提示等功能\n- **GitHub Copilot** (建议安装，作者为：Github)：AI 编程助手\n  - 收费：首月免费，后续每月 \\$10.0，支持国内发行的 Visa 或 Master 信用卡付款。\n  - 建议同时安装 `Github Copilot Chat` 插件，提供更好的交互体验。\n\n::: {.callout-note}\n### 有关编程助手的说明\n\n1. 安装编程助手前，请确保能顺畅上网。\n2. 建议预先申请一个 [GitHub](https://github.com/) 账号，使用 Copilot 时，可以用 GitHub 账号进行关联和登录。\n3. 建议选定一个编程助手，不同同时使用多个助手，以免造成冲突。如果已经安装了多个编程助手，可以在 VScode 的插件管理界面中，点击已安装的插件旁的齿轮按钮，选择 `unable` (暂停使用) 或 `Uninstall` (卸载)。\n4. 我个人使用 Copilot，觉得效果还不错。也有人说 `Codeium ` 也不错 (Copilot 的替代品，Free，目前已经更名为 `Windsurf Plugin`)，它在 VScode 中的安装量比 Copilot 还要多。Cline (作者：Cline，Free) 是最近新出的，我没有尝试，无法评判。\n   \n:::\n\nVScode 插件市场提供了诸多 Python 相关的插件，可以酌情安装，详见：[VScode：实用 Python 插件清单](https://www.lianxh.cn/details/1489.html)。\n\n比如，我装了如下插件\n- `Data Wrangler` (可选)：表格呈现效果很美观\n\n#### Markdown 插件\n\nVScode 支持 Markdown 语法，可以用来编写文档、笔记等。安装 Markdown 插件可以增强 VScode 对 Markdown 的支持，比如预览、语法高亮、制作幻灯片等。多数情况下，安装如下三个插件就可以满足需求：\n\n-   [Markdown All in One](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one)\n-   [Markdown Preview Enhanced](https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced)\n-   Marp (制作[幻灯片](https://www.lianxh.cn/search.html?s=marp))\n\n若想较为全面的了解 Markdown 类插件，可参阅 [VScode：实用 Markdown 插件推荐](https://www.lianxh.cn/details/1390.html)。\n\n你也可以点击 VScode 左边栏中的 `四个小方块` 图标，在搜索框中输入 `markdown`，酌情安装其他插件。\n\n#### Stata 插件 \n\n在 VScode 的扩展搜索框中搜索 `stata`，安装如下插件：\n\n- `Stata Enhanced` (作者：Kyle Barron)：语法高亮支持；\n- `stataRun` (作者：Yeaoh Media Inc)：用于建立 VScode 和 Stata 的后台关联。\n\n要顺利运行 Stata 代码，还需要安装 `nbstata` 包，下文将详细介绍。\n\n\n## 配置 Stata 环境：nbstata\n\n为了在 VS Code 中的 `.ipynb` 文档中直接运行 Stata 代码，我们可以借助 [nbstata](https://hugetim.github.io/nbstata/) 扩展包 (注意：`nbstata` 是 Python 包，不是 VScode 插件)。下面介绍如何在已有 Python + Jupyter 环境基础上完成配置。\n\n::: {.callout-important}\n### 前提条件：你已经完成以下配置\n\n* 已经安装 Anaconda 套装；\n* 已经安装 VS Code 编辑器；并在插件市场安装了 `Python` 和 `Jupyter` 插件；\n* 可以在 VS Code 中新建 `.ipynb` 文件并执行代码块中的 Python 代码。\n\n:::\n\n需要注意的是，`nbstata` 仅适用于 Stata 17+ 及以上版本 (配置了 `pystata`)，且 Stata 的安装路径中不包含中文字符和空格 (在 Stata 中输入 `sysdir` 可以查看你的 Stata 安装路径)。\n\n### 配置步骤\n\n::: {.callout-important}\n### 注意\n\n- 下面的配置步骤需要在 VS Code 的终端中完成，而不是在 Jupyter Notebook 中。\n- 打开 VS Code 的终端的方式参见 [5. Python 安装常见问题](02_install_FAQs.html) &rarr; `5.5 小节`。\n- 如果按下面的方法无法配置成功，可以参阅 [nbstata User Guide](https://hugetim.github.io/nbstata/user_guide.html) 和 [Jupyter + Stata 配置方法](https://industry.pengxianzhe.org/posts/jupyter-stata/#sec-vscode) (第 4 小节)。也可以打开 [豆包](https://www.douban.com/group/topic/297885930/)，把你的错误代码截图和粘贴给它，多数情况下你都能在它的引导下完成配置。\n\n:::\n\n\n\n首先，打开 VS Code 的**终端** (参见 [5. Python 安装常见问题](02_install_FAQs.html) &rarr; `5.5 小节`)，依次执行以下命令：\n\n```bash\npip install nbstata\n\npython -m nbstata.install --conf-file\n```\n\n该指令将生成一个配置文件，便于我们后续修改配置。运行成功后，提示信息如下：\n\n```py\nC:\\Users\\Administrator\\.config\\nbstata\\nbstata.conf\n```\n\n你可以到此文件夹下，用 VScode 打开 `nbstata.conf` 文件，查看或修改配置。我的配置如下：\n\n```py\n[nbstata]\nstata_dir = D:\\stata17\nedition = mp\nsplash = False\ngraph_format = png\ngraph_width = 7.5in\ngraph_height = 5.0in\necho = None\nmissing = .\nbrowse_auto_height = True\n```\n\n完成上述配置后，`nbstata` 就可以在 VS Code 的 `.ipynb` 文件中运行 Stata 代码了 (参见下方的 **测试** 提示框)。如果受阻，可以尝试按如下方式修改 `nbstata.conf` 文件：\n\n- 在 Stata 命令窗口中输入 `sysdir` 命令，结果中第一行显示的就是 Stata 的安装路径 (因人而异)：\n\n   ```stata\n   . sysdir\n     STATA:  D:\\stata17\\\n   ```\n\n   复制 `D:\\stata17\\`，填入 `nbstata.conf` 文件的 `stata_dir` 字段中 (有时需要把反斜杠 `\\` 改成斜杠 `/`)。\n\n- 进入 `D:\\stata17\\` 目录可以查看 Stata 的版本类型，如 `StataMP-64.exe`、`StataSE-64.exe` 或 `StataIC-64.exe`。根据你的 Stata 版本，对照修改 `nbstata.conf` 文件中 `edition` 字段的值为 `mp`、`se` 或 `ic`。\n\n::: {.callout-note}\n### 测试\n\n- 打开或新建一个 `.ipynb` 文件；\n- 点击 `+ Codes` 按钮，创建一个新的代码单元格，指定 Kernel 为 **Stata (nbstata)**，输入 `display 2 + 2`。\n- 按快捷键 `Shift + Enter` 或点击单元格左上角的 `Run` 按钮，若输出 `4`，说明配置成功。\n\n:::\n\n\n\n\n### 补充说明\n\n> Note：安装过程中遇到问题，可以将错误代码，以及你当前的 Python 和 Stata 安装信息发送给豆包或 ChatGPT，它会引导你排除问题。我的 [ChatGPT 对话 - nbstata 安装讲义](https://chatgpt.com/share/688903dd-6580-8005-9efd-10186fdda11c) 供各位参考。 \n\n如下步骤都是**可选的**，主要是为了方便后续的配置和使用。\n\n#### 更新 nbstata\n\n如需更新 nbstata，只需在 VS Code 终端中执行以下命令：\n\n  ```bash\n  pip install --upgrade nbstata\n  ```\n\n#### `python -m nbstata.install` 的完整语法\n\n安装时，如果需要更改安装环境或安装路径，可以按如下语法规则编写命令 (方括号表示选项)：\n\n```python\npython -m nbstata.install [--sys-prefix] [--prefix PREFIX] [--conf-file]\n```\n\n其中，\n\n- `--sys-prefix` 指定安装的环境，例如 virtualenv (虚拟环境) 或 conda env (Conda 环境)。 \n- `--prefix PREFIX` 指定安装路径。\n- `--conf-file` 将创建一个配置文件。\n\n详情参见 [nbstata User Guide](https://hugetim.github.io/nbstata/user_guide.html)。\n\n\n\n### nbstata 扩展信息\n\n有关 nbstata 的更多信息和使用方法，参见：\n\n- [nbstata 文档](https://hugetim.github.io/nbstata/)，以及 [nbstata User Guide](https://hugetim.github.io/nbstata/user_guide.html)\n- [Jupyter + Stata 配置方法](https://industry.pengxianzhe.org/posts/jupyter-stata/#sec-vscode)，第 4 小节。\n- 黄晨晨, 2023, [Jupyter Notebook 与 Stata 交互：nbstata](https://www.lianxh.cn/details/1309.html)\n- 韩少真, 展金永, 2020, [珠联璧合 I：Jupyter Notebook 和 Stata 关联 (windows系统)](https://www.lianxh.cn/details/114.html)。这个推文介绍了如何在原生 Jupyter Notebook 中安装 `nbstata` 包。\n\n::: {.callout-important}\n### 后续 \n\n- 安装过程中可能会遇到各种小挫折，参见 [Python 安装常见问题](02_install_FAQs.html)。\n- 完成上述环境配置后，就可以使用 Jupyter Notebook 编写代码了，参见 [Jupyter Notebook 的使用](01_02_Junpyter_Notebook.html)。\n\n","srcMarkdownNoYaml":"\n\n\n\n\n::: {.callout-important}\n### 重要说明\n\n！**只需安装**：Anaconda + VScode。\n\n- 直接使用 Anaconda 中的 Python 环境即可。\n- 不要单独安装 Python 3.12 / 3.13。\n:::\n\n\n\n\n对于初学者来讲，建议安装 Anaconda 套装。它是一个开源的 Python 发行版，集成了 Python 解释器、包管理器 Conda 和许多常用的科学计算和数据分析库（如 NumPy、Pandas、Matplotlib 等）。\n\n虽然 Anaconda 自带的编辑器 Jupyter Notebook 很好用，但如果你平时经常用 VScode 写东西，建议安装 [VScode](https://www.lianxh.cn/details/1174.html) 作为编辑器。VScode 支持多种编程语言，可以安装各种插件来增强功能。对于编写 Python 代码而言，仅需安装 `python` 和 `jupyter` 插件就可以满足基本需求。\n\n网上有不少关于 Anaconda 和 VScode 的安装和配置的教程，如：\n\n-   [Python 运行环境之 VSCode 与 Anaconda 安装配置](https://blog.csdn.net/weixin_43679228/article/details/147256251)\n-   [Anaconda + VS Code 的安装与使用](https://blog.csdn.net/m0_51976564/article/details/136141325)\n\n根据我的使用经验，基本步骤总结如下：\n\n1. **安装 Anaconda** 软件 (3.1 小节)。注意勾选 `Add Anaconda to my PATH environment variable` 和 `Register Anaconda as my default Python 3.x` 选项。\n2. **安装 VScode**  软件 (3.2 小节)。\n   - 打开 **VScode** 软件，安装 VScode 插件：`Python`, `Jupyter`, `Pylance`, `gitHub Copilot` (或 `codeium`, 现在更名为 `windsurf Plugin`) 等。\n3. **新建项目文件夹** (可选)。打开 VScode，新建一个文件夹，其下新建 **data**, **code**, **output** 等子文件夹，便于分类存放文档。\n4. **新建 Jupyter Notebook 文件**。在主文件夹下新建 `xxx.ipynb` 文件，就可以开始编写代码了。\n\n下面，我详细说明每个步骤的操作。\n\n\n\n## 安装 Anaconda\n\n::: {.callout-warning}\n### 提示\n\n- 请务必认真阅读安装步骤，不要跳过任何步骤，尤其是安装路径的选择和环境变量的配置。否则后续出错后，需要大量时间排查问题。\n- 安装过程中，可以借助 DeepSeek，ChatGPT, 豆包等 AI 助手来解决问题。\n  \n:::\n\n\n1.  [下载 Anaconda](https://www.anaconda.com/products/distribution#download-section)（建议注册一个账号，若不注册，可以点击 **Skip**）。\n\n2.  安装 Anaconda。**安装 Anaconda 最重要的事情：**\n\n    -   **Select Installation Type** 页面，建议选择 **Just Me**，然后点击 **Next**。\n\n    -   **Choose Install Location** 页面，建议使用默认路径 `C:\\Users\\用户名\\Anaconda3` 作为 Anaconda 的安装路径，这样可以避免一些潜在的权限和路径问题。**然而，** 如果你的用户名中包含中文字符或空格，建议选择「自定义路径」，并选择一个英文路径，如 `C:\\myProgram\\Anaconda3`。\n\n    -   **Advanced Installation Options** 页面，确保**同时勾选**如下两个选项：\n\n        -   [√] `Add Anaconda to my PATH environment variable`\n        -   [√] `Register Anaconda as my default Python 3.x`\n\n        ![](https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/20250513210628.png)\n\n    -   详情参见：[VSCode 与 Anaconda安装配置](https://blog.csdn.net/weixin_43679228/article/details/147256251)\n\n3.  安装完成后，打开 Anaconda Prompt（命令行界面），输入以下命令检查安装是否成功：\n\n    ``` bash\n    conda --version\n    ```\n    \n    如果显示版本号，则表示安装成功。\n\n::: {.callout-note}\n### 可选步骤\n\n1.  安装完成后，打开 Anaconda Navigator (在开始菜单或应用程序中找到它)。在 Anaconda Prompt 中输入以下命令更新 Conda 到最新版本：\n\n    ``` bash\n    conda update conda\n    ```\n\n2.  创建一个新的虚拟环境（**可选**）：如果你想在一个独立的环境中工作，比如，你要同时使用 Python 3.8 和 Python 3.12，以便完成不同的项目，你可以创建一个新的虚拟环境。输入以下命令创建一个名为 `myenv38` 的虚拟环境，并安装 Python 3.8：\n\n    ``` bash\n    conda create --name myenv38 python=3.8\n    ```\n\n    同理，如果你想使用 Python 3.12，你可以创建一个名为 `myenv312` 的虚拟环境，并安装 Python 3.12：\n\n    ``` bash\n    conda create --name myenv312 python=3.12\n    ```\n\n    接下来，你可以激活特定的虚拟环境，比如 **myenv38**，输入以下命令：\n\n    ``` bash\n    conda activate myenv38\n    ```\n\n    此时，若执行 `canda list` 命令，你会看到当前环境中安装的所有包和版本信息；而执行 `canda install Stargazer, v = 2.1.1`，则会在当前环境中安装 `Stargazer` 包的 2.1.1 版本。\n\n:::\n\n## 安装 VScode 及插件\n\n::: {.callout-note}\n### VScode 及插件的安装和使用\n\n  - 王胜文, 2023, [VScode编辑器：安装、使用与常用快捷键](https://www.lianxh.cn/details/1174.html)\n  - 初虹, 2022, [Markdown-LaTeX：经管人的VSCode配置大全](https://www.lianxh.cn/details/1004.html).\n  - 连玉君, 2024, [VScode 插件：安装、配置和使用](https://www.lianxh.cn/details/1490.html).\n  - 连玉君, 2024, [VScode：实用 Markdown 插件推荐](https://www.lianxh.cn/details/1390.html).\n  - 连玉君, 2024, [从基础到 AI 助手：Python 用户最爱的 VScode 插件清单](https://www.lianxh.cn/details/1489.html)\n\n:::\n\nVisual Studio Code (VS Code) 是微软推出的轻量但功能强大的源代码编辑器，基于 Electron 开发，支持 Windows、Linux 和 macOS 操作系统。VScode 免费开源且功能强大，VScode 写代码支持各种流行的编程语言，包括 C++、Java 等，使用熟练之后，基本不会再使用其他的编辑器。最重要的是，VScode 平台上有大量的插件，极大地扩展了其功能。\n\n1.  [下载 VScode](https://code.visualstudio.com/Download) (请酌情选择适合你操作系统的版本)。\n2.  安装 VScode（双击下载的安装包，按照提示完成安装）。\n3.  安装完成后，打开 VScode。\n4.  在 VScode 中，安装插件以扩展 VScode 的性能，比如 Python、Jupyter 等。\n\n### VScode 插件\n\n**插件安装方法**：点击图中的 `四个小方块` 图标，在搜索框中填入插件名称，点击 `Install` 即可。\n\n详情参见 [VScode 插件：安装、配置和使用](https://www.lianxh.cn/details/1490.html)\n\n![](https://fig-lianxh.oss-cn-shenzhen.aliyuncs.com/20250516181811.png){width=700}  \n\n为了能在 VScode 中借助 Jupyter Notebook 中同时运行 Python 和 Stata 代码，我们需要安装 `python`, `Jupyter`, `nbstata`, `Copilot` 等插件，具体说明如下。\n\n\n#### Python 和 Jupyter 插件\n\n为了能够在 VScode 中使用 Jupyter Notebook 运行 Python 代码，并借助 AI 提升工作效率，你需要安装以下插件：\n\n- **Python** (必装，作者：Microsoft)：运行 Python 代码\n- **Jupyter** (必装，作者：Microsoft)：用于编辑和运行 Jupyter Notebook 文件\n- **Pylance** (推荐，作者：Microsoft)：代码补全和智能提示等功能\n- **GitHub Copilot** (建议安装，作者为：Github)：AI 编程助手\n  - 收费：首月免费，后续每月 \\$10.0，支持国内发行的 Visa 或 Master 信用卡付款。\n  - 建议同时安装 `Github Copilot Chat` 插件，提供更好的交互体验。\n\n::: {.callout-note}\n### 有关编程助手的说明\n\n1. 安装编程助手前，请确保能顺畅上网。\n2. 建议预先申请一个 [GitHub](https://github.com/) 账号，使用 Copilot 时，可以用 GitHub 账号进行关联和登录。\n3. 建议选定一个编程助手，不同同时使用多个助手，以免造成冲突。如果已经安装了多个编程助手，可以在 VScode 的插件管理界面中，点击已安装的插件旁的齿轮按钮，选择 `unable` (暂停使用) 或 `Uninstall` (卸载)。\n4. 我个人使用 Copilot，觉得效果还不错。也有人说 `Codeium ` 也不错 (Copilot 的替代品，Free，目前已经更名为 `Windsurf Plugin`)，它在 VScode 中的安装量比 Copilot 还要多。Cline (作者：Cline，Free) 是最近新出的，我没有尝试，无法评判。\n   \n:::\n\nVScode 插件市场提供了诸多 Python 相关的插件，可以酌情安装，详见：[VScode：实用 Python 插件清单](https://www.lianxh.cn/details/1489.html)。\n\n比如，我装了如下插件\n- `Data Wrangler` (可选)：表格呈现效果很美观\n\n#### Markdown 插件\n\nVScode 支持 Markdown 语法，可以用来编写文档、笔记等。安装 Markdown 插件可以增强 VScode 对 Markdown 的支持，比如预览、语法高亮、制作幻灯片等。多数情况下，安装如下三个插件就可以满足需求：\n\n-   [Markdown All in One](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one)\n-   [Markdown Preview Enhanced](https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced)\n-   Marp (制作[幻灯片](https://www.lianxh.cn/search.html?s=marp))\n\n若想较为全面的了解 Markdown 类插件，可参阅 [VScode：实用 Markdown 插件推荐](https://www.lianxh.cn/details/1390.html)。\n\n你也可以点击 VScode 左边栏中的 `四个小方块` 图标，在搜索框中输入 `markdown`，酌情安装其他插件。\n\n#### Stata 插件 \n\n在 VScode 的扩展搜索框中搜索 `stata`，安装如下插件：\n\n- `Stata Enhanced` (作者：Kyle Barron)：语法高亮支持；\n- `stataRun` (作者：Yeaoh Media Inc)：用于建立 VScode 和 Stata 的后台关联。\n\n要顺利运行 Stata 代码，还需要安装 `nbstata` 包，下文将详细介绍。\n\n\n## 配置 Stata 环境：nbstata\n\n为了在 VS Code 中的 `.ipynb` 文档中直接运行 Stata 代码，我们可以借助 [nbstata](https://hugetim.github.io/nbstata/) 扩展包 (注意：`nbstata` 是 Python 包，不是 VScode 插件)。下面介绍如何在已有 Python + Jupyter 环境基础上完成配置。\n\n::: {.callout-important}\n### 前提条件：你已经完成以下配置\n\n* 已经安装 Anaconda 套装；\n* 已经安装 VS Code 编辑器；并在插件市场安装了 `Python` 和 `Jupyter` 插件；\n* 可以在 VS Code 中新建 `.ipynb` 文件并执行代码块中的 Python 代码。\n\n:::\n\n需要注意的是，`nbstata` 仅适用于 Stata 17+ 及以上版本 (配置了 `pystata`)，且 Stata 的安装路径中不包含中文字符和空格 (在 Stata 中输入 `sysdir` 可以查看你的 Stata 安装路径)。\n\n### 配置步骤\n\n::: {.callout-important}\n### 注意\n\n- 下面的配置步骤需要在 VS Code 的终端中完成，而不是在 Jupyter Notebook 中。\n- 打开 VS Code 的终端的方式参见 [5. Python 安装常见问题](02_install_FAQs.html) &rarr; `5.5 小节`。\n- 如果按下面的方法无法配置成功，可以参阅 [nbstata User Guide](https://hugetim.github.io/nbstata/user_guide.html) 和 [Jupyter + Stata 配置方法](https://industry.pengxianzhe.org/posts/jupyter-stata/#sec-vscode) (第 4 小节)。也可以打开 [豆包](https://www.douban.com/group/topic/297885930/)，把你的错误代码截图和粘贴给它，多数情况下你都能在它的引导下完成配置。\n\n:::\n\n\n\n首先，打开 VS Code 的**终端** (参见 [5. Python 安装常见问题](02_install_FAQs.html) &rarr; `5.5 小节`)，依次执行以下命令：\n\n```bash\npip install nbstata\n\npython -m nbstata.install --conf-file\n```\n\n该指令将生成一个配置文件，便于我们后续修改配置。运行成功后，提示信息如下：\n\n```py\nC:\\Users\\Administrator\\.config\\nbstata\\nbstata.conf\n```\n\n你可以到此文件夹下，用 VScode 打开 `nbstata.conf` 文件，查看或修改配置。我的配置如下：\n\n```py\n[nbstata]\nstata_dir = D:\\stata17\nedition = mp\nsplash = False\ngraph_format = png\ngraph_width = 7.5in\ngraph_height = 5.0in\necho = None\nmissing = .\nbrowse_auto_height = True\n```\n\n完成上述配置后，`nbstata` 就可以在 VS Code 的 `.ipynb` 文件中运行 Stata 代码了 (参见下方的 **测试** 提示框)。如果受阻，可以尝试按如下方式修改 `nbstata.conf` 文件：\n\n- 在 Stata 命令窗口中输入 `sysdir` 命令，结果中第一行显示的就是 Stata 的安装路径 (因人而异)：\n\n   ```stata\n   . sysdir\n     STATA:  D:\\stata17\\\n   ```\n\n   复制 `D:\\stata17\\`，填入 `nbstata.conf` 文件的 `stata_dir` 字段中 (有时需要把反斜杠 `\\` 改成斜杠 `/`)。\n\n- 进入 `D:\\stata17\\` 目录可以查看 Stata 的版本类型，如 `StataMP-64.exe`、`StataSE-64.exe` 或 `StataIC-64.exe`。根据你的 Stata 版本，对照修改 `nbstata.conf` 文件中 `edition` 字段的值为 `mp`、`se` 或 `ic`。\n\n::: {.callout-note}\n### 测试\n\n- 打开或新建一个 `.ipynb` 文件；\n- 点击 `+ Codes` 按钮，创建一个新的代码单元格，指定 Kernel 为 **Stata (nbstata)**，输入 `display 2 + 2`。\n- 按快捷键 `Shift + Enter` 或点击单元格左上角的 `Run` 按钮，若输出 `4`，说明配置成功。\n\n:::\n\n\n\n\n### 补充说明\n\n> Note：安装过程中遇到问题，可以将错误代码，以及你当前的 Python 和 Stata 安装信息发送给豆包或 ChatGPT，它会引导你排除问题。我的 [ChatGPT 对话 - nbstata 安装讲义](https://chatgpt.com/share/688903dd-6580-8005-9efd-10186fdda11c) 供各位参考。 \n\n如下步骤都是**可选的**，主要是为了方便后续的配置和使用。\n\n#### 更新 nbstata\n\n如需更新 nbstata，只需在 VS Code 终端中执行以下命令：\n\n  ```bash\n  pip install --upgrade nbstata\n  ```\n\n#### `python -m nbstata.install` 的完整语法\n\n安装时，如果需要更改安装环境或安装路径，可以按如下语法规则编写命令 (方括号表示选项)：\n\n```python\npython -m nbstata.install [--sys-prefix] [--prefix PREFIX] [--conf-file]\n```\n\n其中，\n\n- `--sys-prefix` 指定安装的环境，例如 virtualenv (虚拟环境) 或 conda env (Conda 环境)。 \n- `--prefix PREFIX` 指定安装路径。\n- `--conf-file` 将创建一个配置文件。\n\n详情参见 [nbstata User Guide](https://hugetim.github.io/nbstata/user_guide.html)。\n\n\n\n### nbstata 扩展信息\n\n有关 nbstata 的更多信息和使用方法，参见：\n\n- [nbstata 文档](https://hugetim.github.io/nbstata/)，以及 [nbstata User Guide](https://hugetim.github.io/nbstata/user_guide.html)\n- [Jupyter + Stata 配置方法](https://industry.pengxianzhe.org/posts/jupyter-stata/#sec-vscode)，第 4 小节。\n- 黄晨晨, 2023, [Jupyter Notebook 与 Stata 交互：nbstata](https://www.lianxh.cn/details/1309.html)\n- 韩少真, 展金永, 2020, [珠联璧合 I：Jupyter Notebook 和 Stata 关联 (windows系统)](https://www.lianxh.cn/details/114.html)。这个推文介绍了如何在原生 Jupyter Notebook 中安装 `nbstata` 包。\n\n::: {.callout-important}\n### 后续 \n\n- 安装过程中可能会遇到各种小挫折，参见 [Python 安装常见问题](02_install_FAQs.html)。\n- 完成上述环境配置后，就可以使用 Jupyter Notebook 编写代码了，参见 [Jupyter Notebook 的使用](01_02_Junpyter_Notebook.html)。\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"wrap","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"number-sections":true,"highlight-style":"atom-one","css":["../styles.css"],"output-file":"01_1_1_install-Anaconda.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.39","editor":"visual","theme":"cosmo","linestretch":1.6,"fontsize":"11.5pt","highlight":true,"callout-appearance":"default","md-extensions":["callout"],"includes":{"after-body":"../_includes/counter.html"},"title":"Python：安装和环境配置"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}